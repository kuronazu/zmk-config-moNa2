#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 100
#define MOUSE 5
#define SCROLL 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        scroll_up_down: behavior_sensor_rotate_mouse_wheel_up_down {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q    &kp W         &kp E         &kp R        &kp T                                              &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A    &kp S         &kp D         &kp F        &kp G                               &kp MINUS      &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&kp Z    &kp X         &kp C         &kp V        &kp B           &lt 4 EQUAL         &kp LC(EQUAL)  &kp N        &kp M  &kp COMMA  &kp DOT  &kp SINGLE_QUOTE
&kp TAB  &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 SPACE  &kp LEFT_SHIFT  &kp LEFT_CONTROL    &lt 3 ENTER    &lt 2 SPACE                             &kp BACKSLASH
            >;

            sensor-bindings =
                <&scroll_up_down>,
                <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        control {
            bindings = <
&kp ESCAPE      &trans        &kp ENTER     &trans         &trans                               &trans          &trans          &kp UP          &trans           &trans
&kp TAB         &none         &kp DELETE    &kp BACKSPACE  &kp END            &trans            &kp HOME        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&trans          &trans        &trans        &trans         &trans   &trans    &trans            &trans          &trans          &trans          &trans           &trans
&bt BT_CLR_ALL  &bt BT_SEL 0  &bt BT_SEL 1  &trans         &trans   &trans    &kp INT_MUHENKAN  &kp INT_HENKAN                                                   &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        symbol {
            bindings = <
&kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PERCENT                    &kp CARET  &kp AMPERSAND  &kp ASTRK     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans    &trans  &trans    &trans    &trans                 &trans  &trans     &kp BACKSLASH  &kp PIPE      &kp LEFT_BRACE        &kp RIGHT_BRACE
&trans    &trans  &trans    &trans    &trans       &trans    &trans  &trans     &kp SLASH      &kp QUESTION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans    &trans  &trans    &trans    &trans       &trans    &trans  &trans                                                        &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        function_number {
            bindings = <
&trans        &trans        &trans        &trans        &trans                          &none   &none   &none    &none    &none
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5            &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &trans    &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans                            &none
            >;

            sensor-bindings = <&scroll_up_down>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans      &trans                    &trans  &trans     &mkp RCLK  &trans  &trans
&trans  &trans  &kp F2  &kp DELETE  &trans            &trans  &trans  &mkp LCLK  &trans     &trans  &trans
&trans  &trans  &trans  &trans      &trans  &trans    &trans  &trans  &trans     &trans     &trans  &trans
&trans  &trans  &trans  &trans      &trans  &trans    &trans  &trans                                &trans
            >;

            sensor-bindings = <&scroll_up_down>;
        };
    };
};
